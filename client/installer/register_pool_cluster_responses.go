// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/openshift/assisted-service/models"
)

// RegisterPoolClusterReader is a Reader for the RegisterPoolCluster structure.
type RegisterPoolClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterPoolClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewRegisterPoolClusterCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRegisterPoolClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewRegisterPoolClusterUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRegisterPoolClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRegisterPoolClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRegisterPoolClusterCreated creates a RegisterPoolClusterCreated with default headers values
func NewRegisterPoolClusterCreated() *RegisterPoolClusterCreated {
	return &RegisterPoolClusterCreated{}
}

/*RegisterPoolClusterCreated handles this case with default header values.

Success.
*/
type RegisterPoolClusterCreated struct {
	Payload *models.Cluster
}

func (o *RegisterPoolClusterCreated) Error() string {
	return fmt.Sprintf("[POST /pool_clusters][%d] registerPoolClusterCreated  %+v", 201, o.Payload)
}

func (o *RegisterPoolClusterCreated) GetPayload() *models.Cluster {
	return o.Payload
}

func (o *RegisterPoolClusterCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Cluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterPoolClusterBadRequest creates a RegisterPoolClusterBadRequest with default headers values
func NewRegisterPoolClusterBadRequest() *RegisterPoolClusterBadRequest {
	return &RegisterPoolClusterBadRequest{}
}

/*RegisterPoolClusterBadRequest handles this case with default header values.

Error.
*/
type RegisterPoolClusterBadRequest struct {
	Payload *models.Error
}

func (o *RegisterPoolClusterBadRequest) Error() string {
	return fmt.Sprintf("[POST /pool_clusters][%d] registerPoolClusterBadRequest  %+v", 400, o.Payload)
}

func (o *RegisterPoolClusterBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterPoolClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterPoolClusterUnauthorized creates a RegisterPoolClusterUnauthorized with default headers values
func NewRegisterPoolClusterUnauthorized() *RegisterPoolClusterUnauthorized {
	return &RegisterPoolClusterUnauthorized{}
}

/*RegisterPoolClusterUnauthorized handles this case with default header values.

Unauthorized.
*/
type RegisterPoolClusterUnauthorized struct {
	Payload *models.InfraError
}

func (o *RegisterPoolClusterUnauthorized) Error() string {
	return fmt.Sprintf("[POST /pool_clusters][%d] registerPoolClusterUnauthorized  %+v", 401, o.Payload)
}

func (o *RegisterPoolClusterUnauthorized) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *RegisterPoolClusterUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterPoolClusterForbidden creates a RegisterPoolClusterForbidden with default headers values
func NewRegisterPoolClusterForbidden() *RegisterPoolClusterForbidden {
	return &RegisterPoolClusterForbidden{}
}

/*RegisterPoolClusterForbidden handles this case with default header values.

Forbidden.
*/
type RegisterPoolClusterForbidden struct {
	Payload *models.InfraError
}

func (o *RegisterPoolClusterForbidden) Error() string {
	return fmt.Sprintf("[POST /pool_clusters][%d] registerPoolClusterForbidden  %+v", 403, o.Payload)
}

func (o *RegisterPoolClusterForbidden) GetPayload() *models.InfraError {
	return o.Payload
}

func (o *RegisterPoolClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.InfraError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterPoolClusterInternalServerError creates a RegisterPoolClusterInternalServerError with default headers values
func NewRegisterPoolClusterInternalServerError() *RegisterPoolClusterInternalServerError {
	return &RegisterPoolClusterInternalServerError{}
}

/*RegisterPoolClusterInternalServerError handles this case with default header values.

Error.
*/
type RegisterPoolClusterInternalServerError struct {
	Payload *models.Error
}

func (o *RegisterPoolClusterInternalServerError) Error() string {
	return fmt.Sprintf("[POST /pool_clusters][%d] registerPoolClusterInternalServerError  %+v", 500, o.Payload)
}

func (o *RegisterPoolClusterInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *RegisterPoolClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
