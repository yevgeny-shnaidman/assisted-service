// Code generated by go-swagger; DO NOT EDIT.

package installer

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/openshift/assisted-service/models"
)

// RegisterPoolClusterCreatedCode is the HTTP code returned for type RegisterPoolClusterCreated
const RegisterPoolClusterCreatedCode int = 201

/*RegisterPoolClusterCreated Success.

swagger:response registerPoolClusterCreated
*/
type RegisterPoolClusterCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Cluster `json:"body,omitempty"`
}

// NewRegisterPoolClusterCreated creates RegisterPoolClusterCreated with default headers values
func NewRegisterPoolClusterCreated() *RegisterPoolClusterCreated {

	return &RegisterPoolClusterCreated{}
}

// WithPayload adds the payload to the register pool cluster created response
func (o *RegisterPoolClusterCreated) WithPayload(payload *models.Cluster) *RegisterPoolClusterCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register pool cluster created response
func (o *RegisterPoolClusterCreated) SetPayload(payload *models.Cluster) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterPoolClusterCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterPoolClusterBadRequestCode is the HTTP code returned for type RegisterPoolClusterBadRequest
const RegisterPoolClusterBadRequestCode int = 400

/*RegisterPoolClusterBadRequest Error.

swagger:response registerPoolClusterBadRequest
*/
type RegisterPoolClusterBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterPoolClusterBadRequest creates RegisterPoolClusterBadRequest with default headers values
func NewRegisterPoolClusterBadRequest() *RegisterPoolClusterBadRequest {

	return &RegisterPoolClusterBadRequest{}
}

// WithPayload adds the payload to the register pool cluster bad request response
func (o *RegisterPoolClusterBadRequest) WithPayload(payload *models.Error) *RegisterPoolClusterBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register pool cluster bad request response
func (o *RegisterPoolClusterBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterPoolClusterBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterPoolClusterUnauthorizedCode is the HTTP code returned for type RegisterPoolClusterUnauthorized
const RegisterPoolClusterUnauthorizedCode int = 401

/*RegisterPoolClusterUnauthorized Unauthorized.

swagger:response registerPoolClusterUnauthorized
*/
type RegisterPoolClusterUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewRegisterPoolClusterUnauthorized creates RegisterPoolClusterUnauthorized with default headers values
func NewRegisterPoolClusterUnauthorized() *RegisterPoolClusterUnauthorized {

	return &RegisterPoolClusterUnauthorized{}
}

// WithPayload adds the payload to the register pool cluster unauthorized response
func (o *RegisterPoolClusterUnauthorized) WithPayload(payload *models.InfraError) *RegisterPoolClusterUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register pool cluster unauthorized response
func (o *RegisterPoolClusterUnauthorized) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterPoolClusterUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterPoolClusterForbiddenCode is the HTTP code returned for type RegisterPoolClusterForbidden
const RegisterPoolClusterForbiddenCode int = 403

/*RegisterPoolClusterForbidden Forbidden.

swagger:response registerPoolClusterForbidden
*/
type RegisterPoolClusterForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.InfraError `json:"body,omitempty"`
}

// NewRegisterPoolClusterForbidden creates RegisterPoolClusterForbidden with default headers values
func NewRegisterPoolClusterForbidden() *RegisterPoolClusterForbidden {

	return &RegisterPoolClusterForbidden{}
}

// WithPayload adds the payload to the register pool cluster forbidden response
func (o *RegisterPoolClusterForbidden) WithPayload(payload *models.InfraError) *RegisterPoolClusterForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register pool cluster forbidden response
func (o *RegisterPoolClusterForbidden) SetPayload(payload *models.InfraError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterPoolClusterForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// RegisterPoolClusterInternalServerErrorCode is the HTTP code returned for type RegisterPoolClusterInternalServerError
const RegisterPoolClusterInternalServerErrorCode int = 500

/*RegisterPoolClusterInternalServerError Error.

swagger:response registerPoolClusterInternalServerError
*/
type RegisterPoolClusterInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewRegisterPoolClusterInternalServerError creates RegisterPoolClusterInternalServerError with default headers values
func NewRegisterPoolClusterInternalServerError() *RegisterPoolClusterInternalServerError {

	return &RegisterPoolClusterInternalServerError{}
}

// WithPayload adds the payload to the register pool cluster internal server error response
func (o *RegisterPoolClusterInternalServerError) WithPayload(payload *models.Error) *RegisterPoolClusterInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the register pool cluster internal server error response
func (o *RegisterPoolClusterInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *RegisterPoolClusterInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
